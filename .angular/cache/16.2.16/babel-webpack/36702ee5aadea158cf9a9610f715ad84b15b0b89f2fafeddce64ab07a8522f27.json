{"ast":null,"code":"import { of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CurrencyService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:3000/api/currency';\n  }\n  getCurrencies() {\n    return this.http.get(`${this.apiUrl}/currencies`).pipe(catchError(this.handleError('getCurrencies')));\n  }\n  convertCurrency(from, to, amount) {\n    const body = {\n      from,\n      to,\n      amount\n    };\n    return this.http.post(`${this.apiUrl}/convert`, body).pipe(catchError(this.handleError('convertCurrency')));\n  }\n  getConversionHistory() {\n    return this.http.get(`${this.apiUrl}/history`).pipe(catchError(this.handleError('getConversionHistory', [])));\n  }\n  handleError(operation = 'operation', result) {\n    return error => {\n      console.error(`${operation} failed: ${error.message}`);\n      return of(result);\n    };\n  }\n  static {\n    this.ɵfac = function CurrencyService_Factory(t) {\n      return new (t || CurrencyService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: CurrencyService,\n      factory: CurrencyService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["of","catchError","CurrencyService","constructor","http","apiUrl","getCurrencies","get","pipe","handleError","convertCurrency","from","to","amount","body","post","getConversionHistory","operation","result","error","console","message","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/Users/shariquerasheed/Documents/Currency-Converter-Angular/src/app/services/currency.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { \n  CurrencyListResponse, \n  ConversionResponse, \n  ConversionHistoryItem \n} from '../models/currency.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CurrencyService {\n  private apiUrl = 'http://localhost:3000/api/currency';\n\n  constructor(private http: HttpClient) { }\n\n  getCurrencies(): Observable<CurrencyListResponse> {\n    return this.http.get<CurrencyListResponse>(`${this.apiUrl}/currencies`)\n      .pipe(\n        catchError(this.handleError<CurrencyListResponse>('getCurrencies'))\n      );\n  }\n\n  convertCurrency(from: string, to: string, amount: number): Observable<ConversionResponse> {\n    const body = { from, to, amount };\n    return this.http.post<ConversionResponse>(`${this.apiUrl}/convert`, body)\n      .pipe(\n        catchError(this.handleError<ConversionResponse>('convertCurrency'))\n      );\n  }\n\n  getConversionHistory(): Observable<ConversionHistoryItem[]> {\n    return this.http.get<ConversionHistoryItem[]>(`${this.apiUrl}/history`)\n      .pipe(\n        catchError(this.handleError<ConversionHistoryItem[]>('getConversionHistory', []))\n      );\n  }\n\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n      console.error(`${operation} failed: ${error.message}`);\n      return of(result as T);\n    };\n  }\n}"],"mappings":"AAEA,SAAqBA,EAAE,QAAQ,MAAM;AACrC,SAASC,UAAU,QAAa,gBAAgB;;;AAUhD,OAAM,MAAOC,eAAe;EAG1BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,oCAAoC;EAEb;EAExCC,aAAaA,CAAA;IACX,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAuB,GAAG,IAAI,CAACF,MAAM,aAAa,CAAC,CACpEG,IAAI,CACHP,UAAU,CAAC,IAAI,CAACQ,WAAW,CAAuB,eAAe,CAAC,CAAC,CACpE;EACL;EAEAC,eAAeA,CAACC,IAAY,EAAEC,EAAU,EAAEC,MAAc;IACtD,MAAMC,IAAI,GAAG;MAAEH,IAAI;MAAEC,EAAE;MAAEC;IAAM,CAAE;IACjC,OAAO,IAAI,CAACT,IAAI,CAACW,IAAI,CAAqB,GAAG,IAAI,CAACV,MAAM,UAAU,EAAES,IAAI,CAAC,CACtEN,IAAI,CACHP,UAAU,CAAC,IAAI,CAACQ,WAAW,CAAqB,iBAAiB,CAAC,CAAC,CACpE;EACL;EAEAO,oBAAoBA,CAAA;IAClB,OAAO,IAAI,CAACZ,IAAI,CAACG,GAAG,CAA0B,GAAG,IAAI,CAACF,MAAM,UAAU,CAAC,CACpEG,IAAI,CACHP,UAAU,CAAC,IAAI,CAACQ,WAAW,CAA0B,sBAAsB,EAAE,EAAE,CAAC,CAAC,CAClF;EACL;EAEQA,WAAWA,CAAIQ,SAAS,GAAG,WAAW,EAAEC,MAAU;IACxD,OAAQC,KAAU,IAAmB;MACnCC,OAAO,CAACD,KAAK,CAAC,GAAGF,SAAS,YAAYE,KAAK,CAACE,OAAO,EAAE,CAAC;MACtD,OAAOrB,EAAE,CAACkB,MAAW,CAAC;IACxB,CAAC;EACH;;;uBAhCWhB,eAAe,EAAAoB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAfvB,eAAe;MAAAwB,OAAA,EAAfxB,eAAe,CAAAyB,IAAA;MAAAC,UAAA,EAFd;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}